
		//Completar con LomBok (Patron Builder)
		//Ver consultas JPQL y Nativas
		//Crear listado de categorias con número de productos y precio medio
		//Añadir Foto a la categoría y varias fotos a los productos
		//Ámbito de los objetos. Ambito de sesion mediante HttpSession session o con la anotación @SessionScope @Component y luego inyectándolo.
		//Pasar mensajes de una página a otra.
		//Cookies
		//Spring Security (login, logout)


		Long countByCategoria(Categoria categoria);

    	@Query("SELECT COUNT(p) FROM Producto p WHERE p.categoria.id = :categoriaId")
    	long countByIdCategoria(@Param("categoriaId") Long categoriaId);

		@Query(value = "SELECT COUNT(*) FROM producto WHERE categoria_id = :categoriaId", nativeQuery = true)
    	Long countByIdCategoriaNativa(@Param("categoriaId") Long categoriaId);

		@Query("SELECT AVG(p.precio) FROM Producto p WHERE p.categoria.id = :categoriaId")
    	Double AVGPrecioByCategoria(@Param("categoriaId") Long categoriaId);


		//CategoriaCosteMedioDTO
		public class CategoriaCosteMedioDTO {
            private String nombreCategoria;
            private Double costeMedio;
        }
        @Query("SELECT new com.iesjuanbosco.ejemploweb.dto.CategoriaCosteMedioDTO(c.nombre, AVG(p.precio)) " +
                   "FROM Categoria c LEFT JOIN c.productos p GROUP BY c.id")
        List<CategoriaCosteMedioDTO> obtenerCosteMedioPorCategorias();

        @Query(value = "SELECT c.nombre AS nombreCategoria, AVG(p.precio) AS costeMedio " +
                       "FROM categorias c LEFT JOIN productos p ON c.id = p.id_categoria " +
                       "GROUP BY c.id", nativeQuery = true)
        List<CategoriaCosteMedioDTO> obtenerCosteMedioPorCategorias();